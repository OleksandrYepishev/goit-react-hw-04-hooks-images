{"version":3,"sources":["components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","components/Container/Container.styled.js","components/Container/Container.jsx","services/api.js","components/ImageGallery/ImageGalleryItem.styled.js","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.js","components/ImageGallery/ImageGallery.jsx","components/Button/Button.styled.js","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Loader/Loader.styled.js","components/Modal/modal.styled.js","components/Modal/Modal.jsx","Hooks/UseEvent.js","components/App/App.jsx","index.js"],"names":["Serchbar","styled","header","SearchBar","onSearch","onSubmit","e","preventDefault","target","elements","imageName","value","trim","toLowerCase","type","autoComplete","autoFocus","placeholder","name","MainContainer","div","Container","children","axios","defaults","baseURL","fetchImages","page","a","get","hits","data","ImGItem","li","Image","img","ImageGalleryItem","id","webformatURL","tags","onClick","src","alt","ImageGalleryList","ul","ImageGallery","images","onSelect","map","largeImageURL","BtnLoadMore","button","Button","Spinner","color","height","width","timeout","SpinnerContainer","Overlay","ModalImg","Modal","srcImg","altImg","onClose","event","handler","passive","useEffect","window","addEventListener","removeEventListener","useEvent","code","currentTarget","App","useState","setImageName","selectedImage","setSelectedImage","setImages","reqStatus","setReqStatus","setPage","useLayoutEffect","shouldFetch","prevImageName","prevPage","console","log","toast","error","getImages","length","prevImages","scrollTo","top","document","documentElement","scrollHeight","behavior","showButton","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c6872637.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Serchbar = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  form {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n  }\n\n  button {\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n\n  span {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  }\n\n  input {\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n\n    &::placeholder {\n      font: inherit;\n      font-size: 18px;\n    }\n  }\n`;\n","import { Serchbar } from './Searchbar.styled';\r\n\r\nexport const SearchBar = ({ onSearch }) => {\r\n  const handleSearch = e => {\r\n    e.preventDefault();\r\n    onSearch(e.target.elements.imageName.value.trim().toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <Serchbar>\r\n      <form onSubmit={handleSearch}>\r\n        <button type=\"submit\">\r\n          <span>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          name=\"imageName\"\r\n        />\r\n      </form>\r\n    </Serchbar>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n`;\n","import { MainContainer } from './Container.styled';\n\nexport const Container = ({ children }) => (\n  <MainContainer>{children}</MainContainer>\n);\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\nconst API_KEY = '22089613-2c269b20f41d8e495fd067b59';\nconst params = '&image_type=photo&orientation=horizontal&per_page=12';\n\nexport const fetchImages = async (imageName, page) => {\n  const {\n    data: { hits },\n  } = await axios.get(`?key=${API_KEY}&q=${imageName}&${params}&page=${page}`);\n\n  return hits;\n};\n","import styled from '@emotion/styled';\n\nexport const ImGItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import PropTypes from 'prop-types';\r\nimport { ImGItem, Image } from './ImageGalleryItem.styled';\r\n\r\nexport const ImageGalleryItem = ({ id, webformatURL, tags, onClick }) => (\r\n  <ImGItem key={id} onClick={onClick}>\r\n    <Image src={webformatURL} alt={tags} />\r\n  </ImGItem>\r\n);\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  id: PropTypes.number,\r\n  tags: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\n\nexport const ImageGalleryList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import PropTypes from 'prop-types';\r\nimport { ImageGalleryItem } from './ImageGalleryItem';\r\nimport { ImageGalleryList } from './ImageGallery.styled';\r\n\r\nexport const ImageGallery = ({ images, onSelect }) => (\r\n  <ImageGalleryList>\r\n    {images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n      <ImageGalleryItem\r\n        key={id}\r\n        webformatURL={webformatURL}\r\n        tags={tags}\r\n        onClick={() => onSelect({ largeImageURL, tags })}\r\n      />\r\n    ))}\r\n  </ImageGalleryList>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      largeImageURL: PropTypes.string,\r\n      webformatURL: PropTypes.string,\r\n      tags: PropTypes.string,\r\n    }),\r\n  ),\r\n  onSelect: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\n\nexport const BtnLoadMore = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  :focus {\n    background-color: #303f9f;\n  }\n`;\n","import PropTypes from 'prop-types';\r\nimport { BtnLoadMore } from './Button.styled';\r\n\r\nexport const Button = ({ onClick }) => (\r\n  <BtnLoadMore type=\"button\" onClick={onClick}>\r\n    Load more\r\n  </BtnLoadMore>\r\n);\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nexport const Spinner = () => (\r\n  <Loader type=\"Oval\" color=\"#187c39\" height={100} width={100} timeout={3000} />\r\n);\r\n","import styled from '@emotion/styled';\n\nexport const SpinnerContainer = styled.div`\n  position: fixed;\n  top: 100%;\n  left: 50%;\n  transform: translate(-100%, -50%);\n`;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalImg = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import useEvent from '../../Hooks/UseEvent';\r\nimport { Overlay, ModalImg } from './modal.styled';\r\n\r\nexport const Modal = ({ srcImg, altImg, onClose }) => {\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEvent('keydown', handleKeyDown);\r\n\r\n  return (\r\n    <Overlay onClick={handleBackdropClick}>\r\n      <ModalImg>\r\n        <img src={srcImg} alt={altImg} />\r\n      </ModalImg>\r\n    </Overlay>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\n\nexport default function useEvent(event, handler, passive = false) {\n  useEffect(() => {\n    // initiate the event handler\n    window.addEventListener(event, handler, passive);\n\n    // this will clean up the event every time the component is re-rendered\n    return function cleanup() {\n      window.removeEventListener(event, handler);\n    };\n  });\n}\n","import { useState, useLayoutEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport { SearchBar } from '../Searchbar/Searchbar';\nimport { Container } from '../Container/Container';\nimport { fetchImages } from '../../services/api';\nimport { ImageGallery } from '../ImageGallery/ImageGallery';\nimport { Button } from '../Button/Button.jsx';\nimport { Spinner } from '../Loader/Loader';\nimport { SpinnerContainer } from '../Loader/Loader.styled';\nimport { Modal } from '../Modal/Modal';\n\nexport const App = () => {\n  const [imageName, setImageName] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [images, setImages] = useState([]);\n  const [reqStatus, setReqStatus] = useState('idle');\n  const [page, setPage] = useState(1);\n\n  useLayoutEffect(() => {\n    if (imageName === null) {\n      return;\n    }\n\n    const shouldFetch = ({ prevImageName, prevPage }) =>\n      prevImageName !== imageName || prevPage !== page;\n    console.log(shouldFetch(imageName, page));\n\n    if (imageName === '') {\n      return toast.error('U need to write a name of image!');\n    }\n\n    const getImages = async () => {\n      try {\n        setReqStatus('pending');\n        const images = await fetchImages(imageName, page);\n        setReqStatus('resolved');\n\n        if (images.length === 0) {\n          return toast.error(`there is no image with that name  ${imageName}`);\n        }\n        setImages(prevImages => [...prevImages, ...images]);\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      } catch (error) {\n        setReqStatus('resolved');\n      }\n    };\n\n    if (shouldFetch(imageName, page)) {\n      getImages();\n    } else {\n      return setImageName(prevImageName => [...prevImageName]);\n    }\n  }, [imageName, page]);\n\n  const handleFormSubmit = imageName => {\n    setImageName(imageName);\n    setPage(1);\n    if (page !== 1) {\n      setImages([]);\n    }\n  };\n\n  const handleBtnLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const handleSelectedImg = selectedImage => {\n    setSelectedImage(selectedImage);\n  };\n\n  const closeModal = () => {\n    setSelectedImage(null);\n  };\n\n  const showButton = images.length >= 12 && reqStatus === 'resolved';\n\n  return (\n    <Container>\n      <SearchBar onSearch={handleFormSubmit} />\n      {reqStatus === 'pending' && (\n        <SpinnerContainer>\n          <Spinner />\n        </SpinnerContainer>\n      )}\n      <ImageGallery images={images} onSelect={handleSelectedImg} />\n      {showButton && <Button onClick={handleBtnLoadMore} />}\n      {selectedImage && (\n        <Modal\n          srcImg={selectedImage.largeImageURL}\n          altImg={selectedImage.tags}\n          onClose={closeModal}\n        />\n      )}\n      <Toaster position=\"top-right\" />\n    </Container>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}